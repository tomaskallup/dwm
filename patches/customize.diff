diff --git a/config.def.h b/config.def.h
index 3bc9c3d..bdaa7d4 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,15 +1,16 @@
+#include <X11/XF86keysym.h>
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
-static const int startwithgaps	     = 0;	 /* 1 means gaps are used by default */
-static const unsigned int gappx     = 10;       /* default gap between windows in pixels */
+static const int startwithgaps	     = 1;	 /* 1 means gaps are used by default */
+static const unsigned int gappx     = 5;       /* default gap between windows in pixels */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const unsigned int systraypinning = 0;   /* 0: sloppy systray follows selected monitor, >0: pin systray to monitor X */
 static const unsigned int systrayonleft = 0;    /* 0: systray in the right corner, >0: systray on left of status text */
 static const unsigned int systrayspacing = 2;   /* systray spacing */
 static const int systraypinningfailfirst = 1;   /* 1: if pinning fails, display systray on the first monitor, False: display systray on the last monitor*/
-static const int showsystray        = 1;        /* 0 means no systray */
+static const int showsystray        = 0;        /* 0 means no systray */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=10" };
@@ -26,7 +27,7 @@ static const char *colors[][3]      = {
 };
 
 static const char *const autostart[] = {
-	"st", NULL,
+  "dwm-post-start.sh", NULL,
 	NULL /* terminate */
 };
 
@@ -40,7 +41,7 @@ static const Rule rules[] = {
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
 	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	{ "Slack",    NULL,       NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -57,7 +58,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -69,8 +70,22 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, "-c", "-l", "20", NULL };
+static const char *termcmd[]  = { "alacritty", NULL };
+
+/* Media keys */
+static const char *upvol[]      = { "amixer",   "sset", "Master",      "5%+",      NULL };
+static const char *downvol[]    = { "amixer",   "sset", "Master",      "5%-",      NULL };
+static const char *mutevol[]    = { "amixer",   "sset",   "Master",      "toggle",   NULL };
+static const char *brightup[]   = { "light",   "-A",         "10",   NULL };
+static const char *brightdown[] = { "light",   "-U",         "10",   NULL };
+static const char *playpause[] =  { "playerctl", "play-pause",       NULL };
+static const char *playnext[] =  { "playerctl", "next",              NULL };
+static const char *playprev[] =  { "playerctl", "previous",          NULL };
+
+/* Other stuff */
+static const char *lockcmd[] = { "lock-xorg.sh", NULL };
+static const char *screenshot[] = { "flameshot", "gui", NULL };
 
 static const Key keys[] = {
 	/* modifier                     key        function        argument */
@@ -101,6 +116,17 @@ static const Key keys[] = {
 	{ MODKEY,                       XK_equal,  setgaps,        {.i = +5 } },
 	{ MODKEY|ShiftMask,             XK_minus,  setgaps,        {.i = GAP_RESET } },
 	{ MODKEY|ShiftMask,             XK_equal,  setgaps,        {.i = GAP_TOGGLE} },
+	{ MODKEY|ShiftMask,             XK_e,      togglefullscr,  {0} },
+	{ MODKEY|ShiftMask,             XK_l,                     spawn, {.v = lockcmd } },
+	{ 0,                            XF86XK_AudioNext,         spawn, {.v = playnext } },
+	{ 0,                            XF86XK_AudioPrev,         spawn, {.v = playprev } },
+	{ 0,                            XF86XK_AudioPlay,         spawn, {.v = playpause } },
+  { 0,                            XF86XK_AudioLowerVolume,  spawn, {.v = downvol } },
+	{ 0,                            XF86XK_AudioMute,         spawn, {.v = mutevol } },
+	{ 0,                            XF86XK_AudioRaiseVolume,  spawn, {.v = upvol   } },
+  { 0,				                    XF86XK_MonBrightnessUp,	  spawn, {.v = brightup} },
+	{ 0,				                    XF86XK_MonBrightnessDown, spawn, {.v = brightdown} },
+	{ MODKEY,		                    XK_Print,                 spawn, {.v = screenshot} },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
diff --git a/dwm.c b/dwm.c
index d49f824..2498d8f 100644
--- a/dwm.c
+++ b/dwm.c
@@ -243,6 +243,7 @@ static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
+static void togglefullscr(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, int setfocus);
@@ -2073,6 +2074,14 @@ togglebar(const Arg *arg)
 	arrange(selmon);
 }
 
+void
+togglefullscr(const Arg *arg)
+{
+  if(selmon->sel)
+    setfullscreen(selmon->sel, !selmon->sel->isfullscreen);
+}
+
+
 void
 togglefloating(const Arg *arg)
 {
